// these constants describe the pins. They won't change:
const int xpin = A0;                  // x-axis of the accelerometer
const int ypin = A1;                  // y-axis
const int zpin = A2;                  // z-axis (only on 3-axis models)
#include "Adafruit_FONA.h"

#define FONA_RX 2
#define FONA_TX 9
#define FONA_RST 4

#include <SoftwareSerial.h>
SoftwareSerial fonaSS = SoftwareSerial(FONA_TX, FONA_RX);
SoftwareSerial *fonaSerial = &fonaSS;

Adafruit_FONA_3G fona = Adafruit_FONA_3G(FONA_RST);

uint8_t type;
const int ledPin = 6;
const int piezo = 5;
int xa = 0;
int ya = 0;
int za = 0;
float zero_G = 512; 
float lat ;
float lon ;

char charlat [30];
char charlon [30];
char readings [100];

 
boolean stopGettingReadings = false;
 
unsigned long lastTimeTaken = 0;
unsigned long currentTime = 0;

int sampleDelay = 250;   //number of milliseconds between readings

void setup()
{

   while (!Serial);

  Serial.begin(115200);
  Serial.println(F("FONA basic test"));
  Serial.println(F("Initializing....(May take 3 seconds)"));

  fonaSerial->begin(4800);
  if (! fona.begin(*fonaSerial)) {
    Serial.println(F("Couldn't find FONA"));
    while (1);
  }
  type = FONA3G_A;
  Serial.println(F("FONA is OK"));
  Serial.print(F("Found "));

  //Make sure the analog-to-digital converter takes its reference voltage from
  // the AREF pin
 analogReference(EXTERNAL);
 pinMode(ledPin, OUTPUT);
  pinMode(xpin, INPUT);
  pinMode(ypin, INPUT);
  pinMode(zpin, INPUT);
  
 // Serial.println(F("FONA basic test"));
  Serial.println(F("Initializing....(May take 3 seconds)"));
  
    tone(piezo, 2000, 500);
  delay(1000);
   pinMode(11, INPUT_PULLUP);;
}

void loop()
{
  int x = analogRead(xpin);

  //add a small delay between pin readings.  I read that you should
  //do this but haven't tested the importance
    delay(1); 

  int y = analogRead(ypin);

  //add a small delay between pin readings.  I read that you should
  //do this but haven't tested the importance
    delay(1); 

  int z = analogRead(zpin);
delay(1);
  //zero_G is the reading we expect from the sensor when it detects
  //no acceleration.  Subtract this value from the sensor reading to
  //get a shifted sensor reading.
 
  //zero_G is the reading we expect from the sensor when it detects
  //no acceleration.  Subtract this value from the sensor reading to
  //get a shifted sensor reading.
    int pushButton = digitalRead(11);
    Serial.println(pushButton);
  float zero_G = 512; 


  //scale is the number of units we expect the sensor reading to
  //change when the acceleration along an axis changes by 1G.
  //Divide the shifted sensor reading by scale to get acceleration in Gs.
  float scale = 102.3;
 
   
  Serial.print(((float)x - zero_G)/scale);
  Serial.print("\t");  Serial.print(((float)y - zero_G)/scale);
  Serial.print("\t");  Serial.print(((float)z - zero_G)/scale);
  Serial.print("\n");  // delay before next reading:
 
  
  delay(sampleDelay);
  xa = ((float)x - zero_G)/scale; // calculates x acceleration
  ya =((float)y - zero_G)/scale; // calculates y acceleration 
  za = ((float)z - zero_G)/scale; // calculates z acceleration

 float latitude, longitude;

lat = latitude;
        lon = longitude;
  boolean gps_success = fona.getGPS(&latitude, &longitude);

  if (gps_success) {

    Serial.print("GPS lat:");
    Serial.println(latitude, 6);
    Serial.print("GPS long:");
    Serial.println(longitude, 6);
  
if (sqrt(abs(sq(xa) + sq(ya) + sq(za))) >= 2) { 
  tone(piezo,4000,1500);
      /* Take the time once the accident happens only. */
      Serial.println("Fall");
        lastTimeTaken = millis();
        currentTime = lastTimeTaken;
      /* Loop on time and if time exceeds 10 seconds and no one pressed the toggle button in ToggleShield send the messages and Restart the System. */ 
      while(((millis() - lastTimeTaken) < 10000) && (pushButton != 0))
      {pushButton = digitalRead(11);}
      Serial.println(pushButton);
      if(((millis() - lastTimeTaken) >= 10000) && (pushButton == 1))
      {
        Serial.println("Sending Message");
        dtostrf(lat, 3, 6, charlat);
        dtostrf(lon, 3, 6, charlon);
        strcat(readings, "I fell. pick me up from: ");
        strcat(readings, "http://maps.google.com/maps?q=");
        strcat (readings, charlat);
        strcat(readings, ",");
        strcat (readings, charlon);
char sendto[21]="867*******", message[141]="readings";
        fona.sendSMS(sendto, readings);
        delay(1000);
        Serial.println(F("Sent!"));  
        delay(100);
        digitalWrite(ledPin, HIGH);
tone(piezo, 4000, 3000);
delay(5000);
digitalWrite(ledPin, LOW);
        } 
        else 
         {
          digitalWrite(ledPin, LOW);
        /* Check on the button if pressed Restart the whole System.*/
        if(pushButton == 0) 
        {
          Serial.println("button pressed and ok");    //This line is just for debuggint
        }  /* Keep Getting time to check on it.*/
      }
  }
  }}
